<?xml version="1.0"?>
<robot name="my_robo" xmlns:xacro="http://ros.org/wiki/xacro">
<property name="M_PI" value="3.14159274"/>
  <!-- Init colour -->
<!--
  <material name="black">
      <color rgba="0.0 0.0 0.0 1.0"/>
  </material>

  <material name="dark">
    <color rgba="0.3 0.3 0.3 1.0"/>
  </material>
  <material name="light_black">
    <color rgba="0.4 0.4 0.4 1.0"/>
  </material>

  <material name="blue">
    <color rgba="0.0 0.0 0.8 1.0"/>
  </material>

  <material name="green">
    <color rgba="0.0 0.8 0.0 1.0"/>
  </material>

  <material name="grey">
    <color rgba="0.5 0.5 0.5 1.0"/>
  </material>

  <material name="orange">
    <color rgba="${255/255} ${108/255} ${10/255} 1.0"/>
  </material>

  <material name="brown">
    <color rgba="${222/255} ${207/255} ${195/255} 1.0"/>
  </material>

  <material name="red">
    <color rgba="0.8 0.0 0.0 1.0"/>
  </material>

  <material name="white">
    <color rgba="1.0 1.0 1.0 1.0"/>
  </material>
-->

<!-- link -->
 <link name="base_footprint"/>

 <joint name="base_link_joint" type="fixed">
   <parent link="base_footprint"/>
   <child link="base_link"/>
   <origin xyz="0 0 0.0925"/>
 </joint>


   <link name="base_link">
    <visual>
      <geometry>
        <box size="0.300 0.25 0.065"/>
      </geometry>
    </visual>

    <visual name="body">
      <geometry>
        <box size="0.200 0.200 0.300"/>
      </geometry>
      <origin xyz="-0.05 0 0.1825" rpy="0 0 0"/>
    </visual>

    <visual name="top">
      <geometry>
        <box size="0.080 0.165 0.100"/>
      </geometry>
      <origin xyz="-0.055 0 0.3825" rpy="0 0 0"/>
    </visual>

    <visual name="front_caster_assist">
      <geometry>
        <box size="0.02 0.02 0.04"/>
      </geometry>
 	<origin xyz="0.130 0 -0.0525"/>
    </visual>


    <visual name="back_caster_assist">
      <geometry>
        <box size="0.02 0.02 0.04"/>
      </geometry>
      <origin xyz="-0.130 0 -0.0525"/>
    </visual>


   <collision>
      <geometry>
        <box size="0.300 0.250 0.465"/>
      </geometry>
	<origin xyz="0 0 0.20" rpy="0 0 0"/>
    </collision>

   <inertial>
    <origin xyz="-0.05 0 0.0575"/>
    <mass value="6.800"/>      <!--battery1.6kg, mainRobot 5.8kg wheel 0.3kgx2 -->
	<!--calculated as collision cuboid  -->
    <inertia ixx="0.1735275" ixy="0" ixz="0" iyy="0.1579442" iyz="0" izz="0.08641667"/>
   </inertial>
<!-- for Solid cuboid of width w, height h, depth d, and mass m ,
       ixx=(m(h^2+d^2))/12 iyy=(m(w^2+d^2))/12 izz=(m(w^2+h^2))/12-->
  </link>


  <joint name="left_wheel_joint" type="continuous">
    <parent link="base_link"/>
    <child link="left_wheel_link"/>
    <origin rpy="-1.5707 0 0" xyz="0 0.1425 -0.0175"/>
    <axis xyz="0 0 1"/>
    <limit velocity="1.0" effort="5.0"/>	<!--decide mortor power-->
    <dynamics damping="0.2"/>                   <!--damping of axes of mortor-->
  </joint>

 <link name="left_wheel_link">
    <visual>
      <geometry>
        <cylinder radius="0.075" length="0.035"/>
      </geometry>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <material name="black"/>
    </visual>

    <collision>
      <geometry>
        <cylinder radius="0.075" length="0.03"/>
      </geometry>
    </collision>

   <inertial>
    <origin xyz="0 0 0"/>
    <mass value="0.300"/>
    <inertia ixx="0.0004525" ixy="0" ixz="0" iyy="0.0004525" iyz="0" izz="0.00084375"/>
   </inertial>

  <!--for Solid cylinder of radius r, height h and mass m ,
       ixx=(m(3r^2+h^2))/12 iyy=(m(3r^2+h^2))/12 izz=(mr^2)/2-->

  </link>



  <joint name="right_wheel_joint" type="continuous">
    <parent link="base_link"/>
    <child link="right_wheel_link"/>
    <origin rpy="1.5707 0 0" xyz="0 -0.1425 -0.0175"/>
    <axis xyz="0 0 -1"/>
    <limit velocity="1.0" effort="5.0"/>
    <dynamics damping="0.2"/>               
  </joint>

  <link name="right_wheel_link">
    <visual>
      <geometry>
        <cylinder radius="0.075" length="0.03"/>
      </geometry>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <material name="black"/>
    </visual>

    <collision>
      <geometry>
        <cylinder radius="0.075" length="0.03"/>
      </geometry>
    </collision>

   <inertial>
    <origin xyz="0 0 0"/>
    <mass value="0.300"/>
    <inertia ixx="0.0004525" ixy="0" ixz="0" iyy="0.0004525" iyz="0" izz="0.00084375"/>
   </inertial>

  </link>


<!--caster -->
	<xacro:macro name="caster_macro" params="parent">
	<!-- caster-->
		<!--front caster-->
		  <joint name="front_caster_joint" type="fixed">
		 <!--  <parent link="front_caster_assist_link"/>-->
		    <parent link="base_link"/>
		   <child link="front_caster"/>
		  <!-- <origin xyz="0 0 -0.02"/> -->
		   <origin xyz="0.130 0 -0.072"/>
		 </joint>

		  <link name="front_caster">
		    <visual>
		      <geometry>
			<sphere radius="0.02"/>
		      </geometry>
		      <material name="green">
			<color rgba="0 1 0 1"/>
		      </material>
		    </visual>

		    <collision>
		      <geometry>
			<sphere radius="0.02"/>
		      </geometry>
		    </collision>
		  </link>

		<!--back caster-->
		  <joint name="back_caster_joint" type="fixed">
		<!--   <parent link="back_caster_assist_link"/>-->
		<parent link="base_link"/>
		   <child link="back_caster"/>
		<!--   <origin xyz="0 0 -0.02"/> -->
		   <origin xyz="-0.130 0 -0.071"/>
		 </joint>

		  <link name="back_caster">
		    <visual>
		      <geometry>
			<sphere radius="0.02"/>
		      </geometry>
		      <material name="green">
			<color rgba="0 1 0 1"/>
		      </material>
		    </visual>

		    <collision>
		      <geometry>
			<sphere radius="0.02"/>
		      </geometry>
		    </collision>
		  </link>

	<!-- end caster-->
	</xacro:macro>
	<xacro:caster_macro parent="caster_assist_link"/>



 <!--sensor-->
  <xacro:macro name="laser_macro" params="parent prefix xyz">
    <joint name="${prefix}_joint" type="fixed">
      <parent link="${parent}"/>
      <child  link="laser_link"/>
      <origin xyz="${xyz}" rpy="0 0 0"/>
    </joint>

    <link name="laser_link">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <cylinder radius="0.025" length="0.07" />
        </geometry>
        <material name="blue">
          <color rgba="0 0 1 1"/>
	</material>
      </visual>

      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <cylinder radius="0.02" length="0.06" />
        </geometry>
      </collision>

   <inertial>
    <origin xyz="0 0 -0.05"/>
    <mass value="0.160"/>
    <inertia ixx="0.00009" ixy="0" ixz="0" iyy="0.00009" iyz="0" izz="0.00005"/>
   </inertial>
     </link>

  <joint name="to_${prefix}_joint" type="fixed">
   <parent link="laser_link"/>
   <child link="laser"/>
   <origin xyz="0.025 0 0"/>
 </joint>

<link name="laser"/>

<!--camera-->
	  <joint name="camera_base_joint" type="fixed">
	   <parent link="base_link"/>
	   <child link="camera_link"/>
	   <origin xyz="0.0175 0 0.3525"/>
	 </joint>

	    <link name="camera_link">
	      <visual>
		<origin xyz="0 0 0" rpy="0 0 0" />
		<geometry>
		  <box size="0.065 0.25 0.04"/>
		</geometry>
		<material name="blue">
		  <color rgba="0 0 1 1"/>
		</material>
	      </visual>
	      <collision>
		<origin xyz="0 0 0" rpy="0 0 0"/>
		<geometry>
		  <box size="0.065 0.25 0.04"/>
		</geometry>
	      </collision>
	     </link>

	  <joint name="camera_joint" type="fixed">
	   <parent link="camera_link"/>
	   <child link="camera"/>
	   <origin xyz="0.0325 0 0" rpy="0 0 0"/>
	  </joint>

	  <link name="camera"/>




 <!-- ===============  Transmission =============== -->
 <transmission name="left_wheel_trans">
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="left_wheel_joint">
  <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
      </joint>
   <actuator name="left_wheel_motor">
  <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
  <mechanicalReduction>1</mechanicalReduction>
      </actuator>
 </transmission>

 <transmission name="right_wheel_trans">
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="right_wheel_joint">
  <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
      </joint>
   <actuator name="right_wheel_motor">
  <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
  <mechanicalReduction>1</mechanicalReduction>
      </actuator>
 </transmission>

  <!-- =============== Gazebo =============== -->

<gazebo>
<!--
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotNamespace>my_robo</robotNamespace>
  <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
    <legacyModeNS>true</legacyModeNS>
    </plugin>
</gazebo>

<gazebo>

    <plugin name="joint_state_publisher" filename="libgazebo_ros_joint_state_publisher.so">
      <jointName>base_link_joint,front_caster_assist_joint,front_caster_joint,back_caster_assist_joint, back_caster_joint</jointName>
        <updateRate>10</updateRate>
    </plugin>
-->

    <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
      <leftJoint>left_wheel_joint</leftJoint>
      <rightJoint>right_wheel_joint</rightJoint>
     <!-- <robotBaseFrame>base_link</robotBaseFrame> -->
      <wheelSeparation>0.25</wheelSeparation>
      <wheelDiameter>0.15</wheelDiameter>
      <publishWheelJointState>true</publishWheelJointState>
      <legacyMode>false</legacyMode>


      <robotBaseFrame>base_footprint</robotBaseFrame>

      <commandTopic>cmd_vel</commandTopic>
      <odometryTopic>odom</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <odometrySource>world</odometrySource>
      <publishOdomTF>true</publishOdomTF>
      <robotBaseFrame>base_footprint</robotBaseFrame>
      <publishWheelTF>false</publishWheelTF>
      <publishTf>true</publishTf>
      <updateRate>30</updateRate>
      <wheelAcceleration>1</wheelAcceleration>
      <wheelTorque>10</wheelTorque>
      <rosDebugLevel>na</rosDebugLevel>

    </plugin>

</gazebo>

 <gazebo reference="base_link">
   <selfCollide>true</selfCollide>
    <mu1 value="0.5" />
    <mu2 value="0.5" />
  </gazebo>

 <gazebo reference="left_wheel_link">
   <selfCollide>true</selfCollide>
    <mu1 value="9" />
    <mu2 value="9" />
    <kp>500000.0</kp>
    <kd>10.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>0.1</maxVel>
    <fdir1>1 0 0</fdir1>
      <material>Gazebo/Black</material>
  </gazebo>

 <gazebo reference="right_wheel_link">
   <selfCollide>true</selfCollide>
    <mu1 value="9" />
    <mu2 value="9" />
    <kp>500000.0</kp>
    <kd>10.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>0.1</maxVel>
    <fdir1>1 0 0</fdir1>
      <material>Gazebo/Black</material>
  </gazebo>

 <gazebo reference="front_caster">
   <selfCollide>true</selfCollide>
    <mu1 value="0" />
    <mu2 value="0" />
      <material>Gazebo/Green</material>
  </gazebo>

 <gazebo reference="back_caster">
   <selfCollide>true</selfCollide>
    <mu1 value="0" />
    <mu2 value="0" />
      <material>Gazebo/Green</material>
 </gazebo>

 <gazebo reference="laser_link">
      <material>Gazebo/Blue</material>
 </gazebo>

 <gazebo reference="camera_link">
      <material>Gazebo/Blue</material>
 </gazebo>

<!-- sensor-->
    <gazebo reference="laser">
      <sensor type="ray" name="${prefix}">
   <!--   <sensor type="gpu_ray" name="laser"> -->
        <pose>0 0 0 0 0 0</pose>
        <visualize>false</visualize>
        <update_rate>10</update_rate>
        <ray>
          <scan>
            <horizontal>
              <samples>683</samples>--> <!--1024[points]*240[deg]/360[deg]-->
             <resolution>1</resolution>
              <min_angle>${radians(-120)}</min_angle>
              <max_angle>${radians( 120)}</max_angle>
            </horizontal>
          </scan>
          <range>
            <min>0.06</min>
            <max>4.0</max>
            <resolution>0.01</resolution>
          </range>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.01</stddev>
          </noise>
        </ray>
       <plugin name="gazebo_ros_lidar_controller" filename="libgazebo_ros_laser.so">
    <!--  <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_gpu_laser.so"> -->
          <topicName>/scan</topicName>
          <frameName>laser</frameName>
        </plugin>
      </sensor>

    </gazebo>


</xacro:macro>
<xacro:laser_macro parent="base_link" prefix="laser_sensor" xyz="0.125 0 0.0675"/>



<!--CAMERA-->

    <gazebo reference="camera">
      <sensor type="depth" name="Kinectv2">
	<always_on>true</always_on>
        <update_rate>30.0</update_rate>

        <camera name="Kinectv2">
          <pose>0 0 0 0 0 0</pose>
          <horizontal_fov>1.221730</horizontal_fov> <!--viewing angle 70degree-->
         <image>
            <width>640</width>
            <height>480</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.5</near>
            <far>8.0</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.007</stddev>
          </noise>
        </camera>

<!--
        <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
          <alwaysOn>true</alwaysOn>
          <updateRate>0.0</updateRate>
          <cameraName>CAMERA1</cameraName>
          <imageTopicName>image_raw</imageTopicName>
          <cameraInfoTopicName>CAMERA_info</cameraInfoTopicName>
          <frameName>camera</frameName>
          <hackBaseline>0.07</hackBaseline>
          <distortionK1>0.0</distortionK1>
          <distortionK2>0.0</distortionK2>
          <distortionK3>0.0</distortionK3>
          <distortionT1>0.0</distortionT1>
          <distortionT2>0.0</distortionT2>
        </plugin>
-->

      <plugin name="camera_controller" filename="libgazebo_ros_openni_kinect.so">
        <baseline>0.2</baseline>
        <alwaysOn>true</alwaysOn>
        <updateRate>1.0</updateRate>
        <cameraName>camera</cameraName>
        <frameName>camera</frameName>
        <imageTopicName>rgb/image_raw</imageTopicName>
        <depthImageTopicName>rgb/image_raw</depthImageTopicName>
        <pointCloudTopicName>depth/points</pointCloudTopicName>
        <cameraInfoTopicName>rgb/camera_info</cameraInfoTopicName>
        <depthImageCameraInfoTopicName>depth/camera_info</depthImageCameraInfoTopicName>
        <pointCloudCutoff>0.4</pointCloudCutoff>
            <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.00000001</distortionK1>
        <distortionK2>0.00000001</distortionK2>
        <distortionK3>0.00000001</distortionK3>
        <distortionT1>0.00000001</distortionT1>
        <distortionT2>0.00000001</distortionT2>
        <CxPrime>0.0</CxPrime>
        <Cx>0.0</Cx>
        <Cy>0.0</Cy>
        <focalLength>0</focalLength>
        <hackBaseline>0</hackBaseline>
      </plugin>

      </sensor>
    </gazebo>

</robot>
