<?xml version="1.0" encoding="utf-8"?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from my_robo.xacro                  | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="my_robo" xmlns:xacro="http://ros.org/wiki/xacro">
  <link name="base_footprint"/>
  <joint name="base_link_joint" type="fixed">
    <parent link="base_footprint"/>
    <child link="base_link"/>
    <origin xyz="0 0 0.0925"/>
  </joint>
  <link name="base_link">
    <visual>
      <geometry>
        <box size="0.25 0.300 0.065"/>
      </geometry>
    </visual>
    <visual name="body">
      <geometry>
        <box size="0.200 0.200 0.300"/>
      </geometry>
      <origin rpy="0 0 0" xyz="-0.1 0 0.1825"/>
    </visual>
    <visual name="top">
      <geometry>
        <box size="0.165 0.080 0.100"/>
      </geometry>
      <origin rpy="0 0 0" xyz="-0.055 0 0.3825"/>
    </visual>
    <collision>
      <geometry>
        <box size="0.300 0.250 0.525"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0.170"/>
    </collision>
    <inertial>
      <origin xyz="-0.05 0 0.0325"/>
      <mass value="2.000"/>
      <!--calculated as collision cuboid  -->
      <inertia ixx="0.05635" ixy="0" ixz="0" iyy="0.02541" iyz="0" izz="0.06094"/>
    </inertial>
    <!-- for Solid cuboid of width w, height h, depth d, and mass m ,
       ixx=(m(h^2+d^2))/12 iyy=(m(w^2+d^2))/12 izz=(m(w^2+h^2))/12-->
  </link>
  <joint name="left_wheel_joint" type="continuous">
    <parent link="base_link"/>
    <child link="left_wheel_link"/>
    <origin rpy="-1.5707 0 0" xyz="0 0.2675 -0.0175"/>
    <axis xyz="0 0 1"/>
    <limit effort="0.3" velocity="10.0"/>
    <!--decide mortor power-->
    <dynamics damping="0.1"/>
    <!--damping of axes of mortor-->
  </joint>
  <link name="left_wheel_link">
    <visual>
      <geometry>
        <cylinder length="0.035" radius="0.075"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <material name="black"/>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.035" radius="0.075"/>
      </geometry>
    </collision>
    <inertial>
      <origin xyz="0 0 0"/>
      <mass value="0.300"/>
      <inertia ixx="0.0004525" ixy="0" ixz="0" iyy="0.0004525" iyz="0" izz="0.00084375"/>
    </inertial>
    <!--for Solid cylinder of radius r, height h and mass m ,
       ixx=(m(3r^2+h^2))/12 iyy=(m(3r^2+h^2))/12 izz=(mr^2)/2-->
  </link>
  <joint name="right_wheel_joint" type="continuous">
    <parent link="base_link"/>
    <child link="right_wheel_link"/>
    <origin rpy="1.5707 0 0" xyz="0 -0.26750 -0.0175"/>
    <axis xyz="0 0 -1"/>
    <limit effort="0.3" velocity="10.0"/>
    <dynamics damping="0.1"/>
  </joint>
  <link name="right_wheel_link">
    <visual>
      <geometry>
        <cylinder length="0.035" radius="0.075"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <material name="black"/>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.035" radius="0.075"/>
      </geometry>
    </collision>
    <inertial>
      <origin xyz="0 0 0"/>
      <mass value="0.300"/>
      <inertia ixx="0.0004525" ixy="0" ixz="0" iyy="0.0004525" iyz="0" izz="0.00084375"/>
    </inertial>
  </link>
  <!--caster assist-->
  <joint name="front_caster_assist_joint" type="fixed">
    <parent link="base_link"/>
    <child link="front_caster_assist_link"/>
    <origin xyz="0.130 0 -0.0525"/>
  </joint>
  <link name="front_caster_assist_link">
    <visual>
      <geometry>
        <box size="0.02 0.02 0.04"/>
      </geometry>
      <material name="green">
        <color rgba="0 1 0 1"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <box size="0.02 0.02 0.04"/>
      </geometry>
    </collision>
    <!-- 
	   <inertial>
	    <origin xyz="0 0 0"/>
	    <mass value="0.100"/>
	    <inertia ixx="0.00016666666" ixy="0" ixz="0" iyy="0.00016666666"  iyz="0" izz="0.00016666666"/>
	   </inertial>
	-->
  </link>
  <joint name="back_caster_assist_joint" type="fixed">
    <parent link="base_link"/>
    <child link="back_caster_assist_link"/>
    <origin xyz="-0.130 0 -0.0525"/>
  </joint>
  <link name="back_caster_assist_link">
    <visual>
      <geometry>
        <box size="0.02 0.02 0.04"/>
      </geometry>
      <material name="green">
        <color rgba="0 1 0 1"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <box size="0.02 0.02 0.04"/>
      </geometry>
    </collision>
    <!-- 
	   <inertial>
	    <origin xyz="0 0 0"/>
	    <mass value="0.100"/>
	    <inertia ixx="0.00016666666" ixy="0" ixz="0" iyy="0.00016666666"  iyz="0" izz="0.00016666666"/>
	   </inertial>
	-->
  </link>
  <!--end caster assist-->
  <!-- caster-->
  <!--front caster-->
  <joint name="front_caster_joint" type="fixed">
    <parent link="front_caster_assist_link"/>
    <child link="front_caster_link"/>
    <origin xyz="0.130 0 -0.0725"/>
  </joint>
  <link name="front_caster_link">
    <visual>
      <geometry>
        <sphere radius="0.02"/>
      </geometry>
      <material name="green">
        <color rgba="0 1 0 1"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <sphere radius="0.02"/>
      </geometry>
    </collision>
    <!--	    
	   <inertial>
	    <origin xyz="0 0 0"/>
	    <mass value="0.100"/>
	    <inertia ixx="0.00016666666" ixy="0" ixz="0" iyy="0.00016666666"  iyz="0" izz="0.00016666666"/>
	   </inertial>
-->
  </link>
  <!--back caster-->
  <joint name="back_caster_joint" type="fixed">
    <parent link="back_caster_assist_link"/>
    <child link="back_caster_link"/>
    <origin xyz="-0.130 0 -0.0725"/>
  </joint>
  <link name="back_caster_link">
    <visual>
      <geometry>
        <sphere radius="0.02"/>
      </geometry>
      <material name="green">
        <color rgba="0 1 0 1"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <sphere radius="0.02"/>
      </geometry>
    </collision>
    <!--
	   <inertial>
	    <origin xyz="0 0 0"/>
	    <mass value="0.100"/>
	    <inertia ixx="0.00016666666" ixy="0" ixz="0" iyy="0.00016666666"  iyz="0" izz="0.00016666666"/>
	   </inertial>
-->
  </link>
  <!-- end caster-->
  <joint name="laser_sensor_joint" type="fixed">
    <parent link="base_link"/>
    <child link="laser_sensor_link"/>
    <origin rpy="0 0 0" xyz="0.075 0 0.0675"/>
  </joint>
  <link name="laser_sensor_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.07" radius="0.025"/>
      </geometry>
      <material name="blue">
        <color rgba="0 0 1 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.06" radius="0.02"/>
      </geometry>
    </collision>
    <inertial>
      <origin xyz="0 0 -0.05"/>
      <mass value="0.160"/>
      <inertia ixx="0.00009" ixy="0" ixz="0" iyy="0.00009" iyz="0" izz="0.00005"/>
    </inertial>
  </link>
  <joint name="to_laser_sensor_joint" type="fixed">
    <parent link="laser_sensor_link"/>
    <child link="lasor"/>
    <origin xyz="0.025 0 0"/>
  </joint>
  <link name="lasor"/>
  <!--camera-->
  <joint name="camera_base_joint" type="fixed">
    <parent link="base_link"/>
    <child link="camera_base_link"/>
    <origin xyz="0.0175 0 0.3525"/>
  </joint>
  <link name="camera_base_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.065 0.25 0.04"/>
      </geometry>
      <material name="blue">
        <color rgba="0 0 1 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.065 0.25 0.04"/>
      </geometry>
    </collision>
  </link>
  <joint name="camera_joint" type="fixed">
    <parent link="camera_base_link"/>
    <child link="camera"/>
    <origin xyz="0.0325 0 0"/>
  </joint>
  <link name="camera"/>
  <!-- ===============  Transmission =============== -->
  <transmission name="left_wheel_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="left_wheel_joint">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="left_wheel_motor">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
      <mechanicalReduction>30</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="right_wheel_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="right_wheel_joint">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="right_wheel_motor">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
      <mechanicalReduction>30</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- =============== Gazebo =============== -->
  <!--  
<gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotNamespace>my_robo</robotNamespace>
    <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
    <legacyModeNS>true</legacyModeNS>
    </plugin>
  </gazebo>
-->
  <!--
<gazebo>
    <plugin name="joint_state_publisher" filename="libgazebo_ros_joint_state_publisher.so">
      <jointName>base_link_joint</jointName>
    </plugin>
</gazebo>
-->
  <gazebo>
    <plugin filename="libgazebo_ros_diff_drive.so" name="differential_drive_controller">
      <leftJoint>left_wheel_joint</leftJoint>
      <rightJoint>right_wheel_joint</rightJoint>
      <robotBaseFrame>base_link</robotBaseFrame>
      <wheelSeparation>0.108</wheelSeparation>
      <wheelDiameter>0.024</wheelDiameter>
      <publishWheelJointState>true</publishWheelJointState>
      <legacyMode>false</legacyMode>
    </plugin>
  </gazebo>
  <gazebo reference="base_link">
    <selfCollide>true</selfCollide>
    <mu1 value="0.5"/>
    <mu2 value="0.5"/>
  </gazebo>
  <gazebo reference="left_wheel_link">
    <selfCollide>true</selfCollide>
    <mu1 value="0.9"/>
    <mu2 value="0.9"/>
  </gazebo>
  <gazebo reference="right_wheel_link">
    <selfCollide>true</selfCollide>
    <mu1 value="0.9"/>
    <mu2 value="0.9"/>
  </gazebo>
  <gazebo reference="caster_link">
    <selfCollide>true</selfCollide>
    <mu1 value="0.5"/>
    <mu2 value="0.5"/>
  </gazebo>
  <!-- sensor-->
  <gazebo reference="lasor">
    <material>Gazebo/Red</material>
    <sensor name="laser_sensor_link" type="ray">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>10</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>683</samples>
            <!--1024[points]*240[deg]/360[deg]-->
            <resolution>1</resolution>
            <min_angle>-2.09439510239</min_angle>
            <max_angle>2.09439510239</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.06</min>
          <max>4.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin filename="libgazebo_ros_laser.so" name="gazebo_ros_lidar_controller">
        <topicName>/laserscan</topicName>
        <frameName>laser_sensor_link</frameName>
      </plugin>
    </sensor>
  </gazebo>
  <!--CAMERA-->
  <gazebo reference="camera">
    <sensor name="Kinectv2" type="depth">
      <always_on>true</always_on>
      <update_rate>30.0</update_rate>
      <camera name="Kinectv2">
        <pose>0 0 0 0 0 0</pose>
        <horizontal_fov>1.221730</horizontal_fov>
        <!--viewing angle 70degree-->
        <image>
          <width>1920</width>
          <height>1080</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.5</near>
          <far>8.0</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <!--
        <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
          <alwaysOn>true</alwaysOn>
          <updateRate>0.0</updateRate>
          <cameraName>CAMERA1</cameraName>
          <imageTopicName>image_raw</imageTopicName>
          <cameraInfoTopicName>CAMERA_info</cameraInfoTopicName>
          <frameName>camera</frameName>
          <hackBaseline>0.07</hackBaseline>
          <distortionK1>0.0</distortionK1>
          <distortionK2>0.0</distortionK2>
          <distortionK3>0.0</distortionK3>
          <distortionT1>0.0</distortionT1>
          <distortionT2>0.0</distortionT2>
        </plugin>
-->
      <plugin filename="libgazebo_ros_openni_kinect.so" name="camera_controller">
        <baseline>0.2</baseline>
        <alwaysOn>true</alwaysOn>
        <updateRate>30.0</updateRate>
        <cameraName>camera</cameraName>
        <frameName>camera</frameName>
        <imageTopicName>rgb/image_raw</imageTopicName>
        <depthImageTopicName>rgb/image_raw</depthImageTopicName>
        <pointCloudTopicName>depth/points</pointCloudTopicName>
        <cameraInfoTopicName>rgb/camera_info</cameraInfoTopicName>
        <depthImageCameraInfoTopicName>depth/camera_info</depthImageCameraInfoTopicName>
        <pointCloudCutoff>0.4</pointCloudCutoff>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
        <CxPrime>0.0</CxPrime>
        <Cx>0.0</Cx>
        <Cy>0.0</Cy>
        <focalLength>0</focalLength>
        <hackBaseline>0</hackBaseline>
      </plugin>
    </sensor>
  </gazebo>
</robot>

